package recordables;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import commands.Paste;
import editor.Recorder;
import engine.EditionEngine;
import mementos.MementoCommand;
import mementos.MementoPaste;

/**
 * La classe PasteRecordable execute une commande Paste et enregistre son
 * MementoCommand dans un Recorder
 *
 * @see Recorder
 * @see Paste
 * @see CommandRecordable
 */
public final class PasteRecordable implements CommandRecordable {

	/**
	 * Logger pour suivre le déroulement de l'application
	 */
	private static final Logger LOGGER = LogManager.getLogger(PasteRecordable.class.getName());

	private Recorder		recorder;
	private EditionEngine	engine;

	/**
	 * Instantiate a PasteRecordable from the given parameters (all shall be
	 * not null)
	 *
	 * @param engine
	 *            the engine to ask to execute the command
	 * @param recorder
	 *            the command recorder
	 */
	public PasteRecordable(EditionEngine engine, Recorder recorder) {

		/* Preconditions */
		if (recorder == null)
			throw new IllegalArgumentException("recorder is null");
		if (engine == null)
			throw new IllegalArgumentException("engine is null");

		/* Treatment */

		this.recorder = recorder;
		this.engine = engine;
	}

	/**
	 * Instantiate a PasteRecordable from a memento and executes a cut
	 * command.
	 *
	 * @param memento
	 *            the memento from which we restore the state and execute the
	 *            select command
	 */
	public PasteRecordable(MementoCommand memento) {
		restore(memento);
		LOGGER.trace("Rejeu d'une commande PasteRecordable");
		new Paste(engine).execute();
	}

	@Override
	public final void execute() {
		recorder.enregistrer(this);
		LOGGER.trace("Exécution d'une commande PasteRecordable");
		new Paste(engine).execute();
	}

	@Override
	public final MementoCommand getMemento() {
		return new MementoPaste(engine, recorder);
	}

	@Override
	public final void restore(MementoCommand memento) {
		/* Preconditions */
		if (memento == null)
			throw new IllegalArgumentException("memento is null");

		if (!(memento instanceof MementoPaste))
			throw new IllegalArgumentException("Not a MementoPaste");

		LOGGER.trace("PasteRecordable from memento");

		/* Treatment */
		engine = memento.getEngine();
		recorder = memento.getRecorder();
	}
}
