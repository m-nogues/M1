package tests;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Matchers;
import org.mockito.Mockito;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import editor.Recorder;
import engine.EditionEngine;
import engine.ImplementedEngine;
import engine.Selection;
import recordables.CopyRecordable;
import recordables.CutRecordable;
import recordables.DelTextRecordable;
import recordables.InsTextRecordable;
import recordables.PasteRecordable;
import recordables.SelectRecordable;

@RunWith(PowerMockRunner.class)
@PrepareForTest({ ImplementedEngine.class, Recorder.class })
public class UnitTestCommandsV2 {

	private static EditionEngine	moteur;
	private static Recorder			recorder;

	public UnitTestCommandsV2() {

		moteur = PowerMockito.mock(ImplementedEngine.class);
		recorder = PowerMockito.mock(Recorder.class);
	}

	@Test
	public void testCollerEnregistrable() {

		PasteRecordable cmd = new PasteRecordable(moteur, recorder);
		cmd.execute();
		Mockito.verify(recorder).enregistrer(Matchers.eq(cmd));
	}

	@Test
	public void testCopierEnregistrable() {

		CopyRecordable cmd = new CopyRecordable(moteur, recorder);
		cmd.executer();
		Mockito.verify(recorder).enregistrer(Matchers.eq(cmd));
	}

	@Test
	public void testCouperEnregistrable() {

		CutRecordable cmd = new CutRecordable(moteur, recorder);
		cmd.executer();
		Mockito.verify(recorder).enregistrer(Matchers.eq(cmd));
	}

	@Test
	public void testInsererTexteEnregistrable() {

		InsTextRecordable cmd = new InsTextRecordable(moteur, recorder, "Test");
		cmd.execute();
		Mockito.verify(moteur).insererTexte(Matchers.eq("Test"));
		Mockito.verify(recorder).enregistrer(Matchers.eq(cmd));
	}

	@Test
	public void testSelectionnerEnregistrable() {

		SelectRecordable cmd = new SelectRecordable(moteur, recorder, new Selection(0, 4));
		cmd.execute();
		Mockito.verify(recorder).enregistrer(Matchers.eq(cmd));
	}

	@Test
	public void testSupprimerTexteEnregistrable() {

		DelTextRecordable cmd = new DelTextRecordable(moteur, recorder);
		cmd.executer();
		Mockito.verify(recorder).enregistrer(Matchers.eq(cmd));
	}

}
