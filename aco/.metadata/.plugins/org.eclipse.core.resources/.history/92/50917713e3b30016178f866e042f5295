package recordables;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import commands.Cut;
import editor.Recorder;
import engine.EditionEngine;
import mementos.MementoCommand;
import mementos.MementoCut;

/**
 * CutRecordable executes a cut command will saving its state in a
 * recorder.
 *
 * @see Recorder
 * @see Cut
 * @see CommandRecordable
 */
public final class CutRecordable implements CommandRecordable {

	private static final Logger LOGGER = LogManager.getLogger(CutRecordable.class.getName());

	private Recorder		recorder;
	private EditionEngine	engine;

	/**
	 * Instantiate a CutRecordable from the given parameters (all shall be
	 * not null)
	 *
	 * @param engine
	 *            the engine to ask to execute the command
	 * @param recorder
	 *            the command recorder
	 */
	public CutRecordable(EditionEngine engine, Recorder recorder) {

		/* Preconditions */
		if (recorder == null)
			throw new IllegalArgumentException("recorder is null");
		if (engine == null)
			throw new IllegalArgumentException("engine is null");

		/* Treatment */

		this.recorder = recorder;
		this.engine = engine;
	}

	/**
	 * Instantiate a CutRecordable from a memento and executes a cut
	 * command.
	 *
	 * @param memento
	 *            the memento from which we restore the state and execute the
	 *            select command
	 */
	public CutRecordable(MementoCommand memento) {

		restore(memento);
		new Cut(engine).execute();
	}

	@Override
	public final void execute() {
		recorder.enregistrer(this);
		LOGGER.trace("Exécution d'une commande CutRecordable");
		new Cut(engine).execute();
	}

	@Override
	public final MementoCommand getMemento() {

		return new MementoCut(engine, recorder);
	}

	@Override
	public final void restore(MementoCommand memento) {

		/* Preconditions */
		if (memento == null)
			throw new IllegalArgumentException("memento is null");

		if (!(memento instanceof MementoCut))
			throw new IllegalArgumentException("Not a MementoCut");

		LOGGER.trace("Restauration d'une commande CutRecordable à partir d'un memento");

		/* Treatment */
		engine = memento.getEngine();
		recorder = memento.getRecorder();
	}
}
